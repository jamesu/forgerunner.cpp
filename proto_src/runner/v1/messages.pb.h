// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: runner/v1/messages.proto
// Protobuf C++ Version: 5.29.3

#ifndef runner_2fv1_2fmessages_2eproto_2epb_2eh
#define runner_2fv1_2fmessages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/struct.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_runner_2fv1_2fmessages_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_runner_2fv1_2fmessages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_runner_2fv1_2fmessages_2eproto;
namespace runner {
namespace v1 {
class DeclareRequest;
struct DeclareRequestDefaultTypeInternal;
extern DeclareRequestDefaultTypeInternal _DeclareRequest_default_instance_;
class DeclareResponse;
struct DeclareResponseDefaultTypeInternal;
extern DeclareResponseDefaultTypeInternal _DeclareResponse_default_instance_;
class FetchTaskRequest;
struct FetchTaskRequestDefaultTypeInternal;
extern FetchTaskRequestDefaultTypeInternal _FetchTaskRequest_default_instance_;
class FetchTaskResponse;
struct FetchTaskResponseDefaultTypeInternal;
extern FetchTaskResponseDefaultTypeInternal _FetchTaskResponse_default_instance_;
class LogRow;
struct LogRowDefaultTypeInternal;
extern LogRowDefaultTypeInternal _LogRow_default_instance_;
class RegisterRequest;
struct RegisterRequestDefaultTypeInternal;
extern RegisterRequestDefaultTypeInternal _RegisterRequest_default_instance_;
class RegisterResponse;
struct RegisterResponseDefaultTypeInternal;
extern RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;
class Runner;
struct RunnerDefaultTypeInternal;
extern RunnerDefaultTypeInternal _Runner_default_instance_;
class StepState;
struct StepStateDefaultTypeInternal;
extern StepStateDefaultTypeInternal _StepState_default_instance_;
class Task;
struct TaskDefaultTypeInternal;
extern TaskDefaultTypeInternal _Task_default_instance_;
class TaskNeed;
struct TaskNeedDefaultTypeInternal;
extern TaskNeedDefaultTypeInternal _TaskNeed_default_instance_;
class TaskNeed_OutputsEntry_DoNotUse;
struct TaskNeed_OutputsEntry_DoNotUseDefaultTypeInternal;
extern TaskNeed_OutputsEntry_DoNotUseDefaultTypeInternal _TaskNeed_OutputsEntry_DoNotUse_default_instance_;
class TaskState;
struct TaskStateDefaultTypeInternal;
extern TaskStateDefaultTypeInternal _TaskState_default_instance_;
class Task_NeedsEntry_DoNotUse;
struct Task_NeedsEntry_DoNotUseDefaultTypeInternal;
extern Task_NeedsEntry_DoNotUseDefaultTypeInternal _Task_NeedsEntry_DoNotUse_default_instance_;
class Task_SecretsEntry_DoNotUse;
struct Task_SecretsEntry_DoNotUseDefaultTypeInternal;
extern Task_SecretsEntry_DoNotUseDefaultTypeInternal _Task_SecretsEntry_DoNotUse_default_instance_;
class Task_VarsEntry_DoNotUse;
struct Task_VarsEntry_DoNotUseDefaultTypeInternal;
extern Task_VarsEntry_DoNotUseDefaultTypeInternal _Task_VarsEntry_DoNotUse_default_instance_;
class UpdateLogRequest;
struct UpdateLogRequestDefaultTypeInternal;
extern UpdateLogRequestDefaultTypeInternal _UpdateLogRequest_default_instance_;
class UpdateLogResponse;
struct UpdateLogResponseDefaultTypeInternal;
extern UpdateLogResponseDefaultTypeInternal _UpdateLogResponse_default_instance_;
class UpdateTaskRequest;
struct UpdateTaskRequestDefaultTypeInternal;
extern UpdateTaskRequestDefaultTypeInternal _UpdateTaskRequest_default_instance_;
class UpdateTaskRequest_OutputsEntry_DoNotUse;
struct UpdateTaskRequest_OutputsEntry_DoNotUseDefaultTypeInternal;
extern UpdateTaskRequest_OutputsEntry_DoNotUseDefaultTypeInternal _UpdateTaskRequest_OutputsEntry_DoNotUse_default_instance_;
class UpdateTaskResponse;
struct UpdateTaskResponseDefaultTypeInternal;
extern UpdateTaskResponseDefaultTypeInternal _UpdateTaskResponse_default_instance_;
}  // namespace v1
}  // namespace runner
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace runner {
namespace v1 {
enum RunnerStatus : int {
  RUNNER_STATUS_UNSPECIFIED = 0,
  RUNNER_STATUS_IDLE = 1,
  RUNNER_STATUS_ACTIVE = 2,
  RUNNER_STATUS_OFFLINE = 3,
  RunnerStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RunnerStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RunnerStatus_IsValid(int value);
extern const uint32_t RunnerStatus_internal_data_[];
constexpr RunnerStatus RunnerStatus_MIN = static_cast<RunnerStatus>(0);
constexpr RunnerStatus RunnerStatus_MAX = static_cast<RunnerStatus>(3);
constexpr int RunnerStatus_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
RunnerStatus_descriptor();
template <typename T>
const std::string& RunnerStatus_Name(T value) {
  static_assert(std::is_same<T, RunnerStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RunnerStatus_Name().");
  return RunnerStatus_Name(static_cast<RunnerStatus>(value));
}
template <>
inline const std::string& RunnerStatus_Name(RunnerStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RunnerStatus_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool RunnerStatus_Parse(absl::string_view name, RunnerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RunnerStatus>(
      RunnerStatus_descriptor(), name, value);
}
enum Result : int {
  RESULT_UNSPECIFIED = 0,
  RESULT_SUCCESS = 1,
  RESULT_FAILURE = 2,
  RESULT_CANCELLED = 3,
  RESULT_SKIPPED = 4,
  Result_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Result_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Result_IsValid(int value);
extern const uint32_t Result_internal_data_[];
constexpr Result Result_MIN = static_cast<Result>(0);
constexpr Result Result_MAX = static_cast<Result>(4);
constexpr int Result_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
Result_descriptor();
template <typename T>
const std::string& Result_Name(T value) {
  static_assert(std::is_same<T, Result>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Result_Name().");
  return Result_Name(static_cast<Result>(value));
}
template <>
inline const std::string& Result_Name(Result value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Result_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool Result_Parse(absl::string_view name, Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Result>(
      Result_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateTaskRequest_OutputsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  UpdateTaskRequest_OutputsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTaskRequest_OutputsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UpdateTaskRequest_OutputsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UpdateTaskRequest_OutputsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UpdateTaskRequest_OutputsEntry_DoNotUse*>(
        &_UpdateTaskRequest_OutputsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class UpdateLogResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.UpdateLogResponse) */ {
 public:
  inline UpdateLogResponse() : UpdateLogResponse(nullptr) {}
  ~UpdateLogResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateLogResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateLogResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateLogResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateLogResponse(const UpdateLogResponse& from) : UpdateLogResponse(nullptr, from) {}
  inline UpdateLogResponse(UpdateLogResponse&& from) noexcept
      : UpdateLogResponse(nullptr, std::move(from)) {}
  inline UpdateLogResponse& operator=(const UpdateLogResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateLogResponse& operator=(UpdateLogResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateLogResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateLogResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateLogResponse*>(
        &_UpdateLogResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(UpdateLogResponse& a, UpdateLogResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateLogResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateLogResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateLogResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateLogResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateLogResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateLogResponse& from) { UpdateLogResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateLogResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.UpdateLogResponse"; }

 protected:
  explicit UpdateLogResponse(::google::protobuf::Arena* arena);
  UpdateLogResponse(::google::protobuf::Arena* arena, const UpdateLogResponse& from);
  UpdateLogResponse(::google::protobuf::Arena* arena, UpdateLogResponse&& from) noexcept
      : UpdateLogResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAckIndexFieldNumber = 1,
  };
  // int64 ack_index = 1;
  void clear_ack_index() ;
  ::int64_t ack_index() const;
  void set_ack_index(::int64_t value);

  private:
  ::int64_t _internal_ack_index() const;
  void _internal_set_ack_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.UpdateLogResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateLogResponse& from_msg);
    ::int64_t ack_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class TaskNeed_OutputsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  TaskNeed_OutputsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskNeed_OutputsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TaskNeed_OutputsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TaskNeed_OutputsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TaskNeed_OutputsEntry_DoNotUse*>(
        &_TaskNeed_OutputsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Task_VarsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Task_VarsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Task_VarsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Task_VarsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Task_VarsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Task_VarsEntry_DoNotUse*>(
        &_Task_VarsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Task_SecretsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Task_SecretsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Task_SecretsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Task_SecretsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Task_SecretsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Task_SecretsEntry_DoNotUse*>(
        &_Task_SecretsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class Runner final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.Runner) */ {
 public:
  inline Runner() : Runner(nullptr) {}
  ~Runner() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Runner* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Runner));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Runner(
      ::google::protobuf::internal::ConstantInitialized);

  inline Runner(const Runner& from) : Runner(nullptr, from) {}
  inline Runner(Runner&& from) noexcept
      : Runner(nullptr, std::move(from)) {}
  inline Runner& operator=(const Runner& from) {
    CopyFrom(from);
    return *this;
  }
  inline Runner& operator=(Runner&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Runner& default_instance() {
    return *internal_default_instance();
  }
  static inline const Runner* internal_default_instance() {
    return reinterpret_cast<const Runner*>(
        &_Runner_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Runner& a, Runner& b) { a.Swap(&b); }
  inline void Swap(Runner* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Runner* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Runner* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Runner>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Runner& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Runner& from) { Runner::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Runner* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.Runner"; }

 protected:
  explicit Runner(::google::protobuf::Arena* arena);
  Runner(::google::protobuf::Arena* arena, const Runner& from);
  Runner(::google::protobuf::Arena* arena, Runner&& from) noexcept
      : Runner(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentLabelsFieldNumber = 6,
    kCustomLabelsFieldNumber = 7,
    kLabelsFieldNumber = 9,
    kUuidFieldNumber = 2,
    kTokenFieldNumber = 3,
    kNameFieldNumber = 4,
    kVersionFieldNumber = 8,
    kIdFieldNumber = 1,
    kStatusFieldNumber = 5,
  };
  // repeated string agent_labels = 6 [deprecated = true];
  [[deprecated]]  int agent_labels_size() const;
  private:
  int _internal_agent_labels_size() const;

  public:
  [[deprecated]]  void clear_agent_labels() ;
  [[deprecated]] const std::string& agent_labels(int index) const;
  [[deprecated]] std::string* mutable_agent_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_agent_labels(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_agent_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_agent_labels(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& agent_labels() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_agent_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_agent_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_agent_labels();

  public:
  // repeated string custom_labels = 7 [deprecated = true];
  [[deprecated]]  int custom_labels_size() const;
  private:
  int _internal_custom_labels_size() const;

  public:
  [[deprecated]]  void clear_custom_labels() ;
  [[deprecated]] const std::string& custom_labels(int index) const;
  [[deprecated]] std::string* mutable_custom_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_custom_labels(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_custom_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_custom_labels(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& custom_labels() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_custom_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_custom_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_custom_labels();

  public:
  // repeated string labels = 9;
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string uuid = 2;
  void clear_uuid() ;
  const std::string& uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_uuid();
  PROTOBUF_NODISCARD std::string* release_uuid();
  void set_allocated_uuid(std::string* value);

  private:
  const std::string& _internal_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid(
      const std::string& value);
  std::string* _internal_mutable_uuid();

  public:
  // string token = 3;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string name = 4;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string version = 8;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // .runner.v1.RunnerStatus status = 5;
  void clear_status() ;
  ::runner::v1::RunnerStatus status() const;
  void set_status(::runner::v1::RunnerStatus value);

  private:
  ::runner::v1::RunnerStatus _internal_status() const;
  void _internal_set_status(::runner::v1::RunnerStatus value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.Runner)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      84, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Runner& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> agent_labels_;
    ::google::protobuf::RepeatedPtrField<std::string> custom_labels_;
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr uuid_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::int64_t id_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class RegisterRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.RegisterRequest) */ {
 public:
  inline RegisterRequest() : RegisterRequest(nullptr) {}
  ~RegisterRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterRequest(const RegisterRequest& from) : RegisterRequest(nullptr, from) {}
  inline RegisterRequest(RegisterRequest&& from) noexcept
      : RegisterRequest(nullptr, std::move(from)) {}
  inline RegisterRequest& operator=(const RegisterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterRequest& operator=(RegisterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterRequest*>(
        &_RegisterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(RegisterRequest& a, RegisterRequest& b) { a.Swap(&b); }
  inline void Swap(RegisterRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterRequest& from) { RegisterRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.RegisterRequest"; }

 protected:
  explicit RegisterRequest(::google::protobuf::Arena* arena);
  RegisterRequest(::google::protobuf::Arena* arena, const RegisterRequest& from);
  RegisterRequest(::google::protobuf::Arena* arena, RegisterRequest&& from) noexcept
      : RegisterRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAgentLabelsFieldNumber = 3,
    kCustomLabelsFieldNumber = 4,
    kLabelsFieldNumber = 6,
    kNameFieldNumber = 1,
    kTokenFieldNumber = 2,
    kVersionFieldNumber = 5,
  };
  // repeated string agent_labels = 3 [deprecated = true];
  [[deprecated]]  int agent_labels_size() const;
  private:
  int _internal_agent_labels_size() const;

  public:
  [[deprecated]]  void clear_agent_labels() ;
  [[deprecated]] const std::string& agent_labels(int index) const;
  [[deprecated]] std::string* mutable_agent_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_agent_labels(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_agent_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_agent_labels(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& agent_labels() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_agent_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_agent_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_agent_labels();

  public:
  // repeated string custom_labels = 4 [deprecated = true];
  [[deprecated]]  int custom_labels_size() const;
  private:
  int _internal_custom_labels_size() const;

  public:
  [[deprecated]]  void clear_custom_labels() ;
  [[deprecated]] const std::string& custom_labels(int index) const;
  [[deprecated]] std::string* mutable_custom_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_custom_labels(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_custom_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_custom_labels(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& custom_labels() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_custom_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_custom_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_custom_labels();

  public:
  // repeated string labels = 6;
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string version = 5;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.RegisterRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> agent_labels_;
    ::google::protobuf::RepeatedPtrField<std::string> custom_labels_;
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class FetchTaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.FetchTaskRequest) */ {
 public:
  inline FetchTaskRequest() : FetchTaskRequest(nullptr) {}
  ~FetchTaskRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FetchTaskRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FetchTaskRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FetchTaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FetchTaskRequest(const FetchTaskRequest& from) : FetchTaskRequest(nullptr, from) {}
  inline FetchTaskRequest(FetchTaskRequest&& from) noexcept
      : FetchTaskRequest(nullptr, std::move(from)) {}
  inline FetchTaskRequest& operator=(const FetchTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FetchTaskRequest& operator=(FetchTaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FetchTaskRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FetchTaskRequest* internal_default_instance() {
    return reinterpret_cast<const FetchTaskRequest*>(
        &_FetchTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FetchTaskRequest& a, FetchTaskRequest& b) { a.Swap(&b); }
  inline void Swap(FetchTaskRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FetchTaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FetchTaskRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FetchTaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FetchTaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FetchTaskRequest& from) { FetchTaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FetchTaskRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.FetchTaskRequest"; }

 protected:
  explicit FetchTaskRequest(::google::protobuf::Arena* arena);
  FetchTaskRequest(::google::protobuf::Arena* arena, const FetchTaskRequest& from);
  FetchTaskRequest(::google::protobuf::Arena* arena, FetchTaskRequest&& from) noexcept
      : FetchTaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTasksVersionFieldNumber = 1,
  };
  // int64 tasks_version = 1;
  void clear_tasks_version() ;
  ::int64_t tasks_version() const;
  void set_tasks_version(::int64_t value);

  private:
  ::int64_t _internal_tasks_version() const;
  void _internal_set_tasks_version(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.FetchTaskRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FetchTaskRequest& from_msg);
    ::int64_t tasks_version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class DeclareRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.DeclareRequest) */ {
 public:
  inline DeclareRequest() : DeclareRequest(nullptr) {}
  ~DeclareRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeclareRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeclareRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeclareRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeclareRequest(const DeclareRequest& from) : DeclareRequest(nullptr, from) {}
  inline DeclareRequest(DeclareRequest&& from) noexcept
      : DeclareRequest(nullptr, std::move(from)) {}
  inline DeclareRequest& operator=(const DeclareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeclareRequest& operator=(DeclareRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeclareRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeclareRequest* internal_default_instance() {
    return reinterpret_cast<const DeclareRequest*>(
        &_DeclareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(DeclareRequest& a, DeclareRequest& b) { a.Swap(&b); }
  inline void Swap(DeclareRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeclareRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeclareRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeclareRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeclareRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeclareRequest& from) { DeclareRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeclareRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.DeclareRequest"; }

 protected:
  explicit DeclareRequest(::google::protobuf::Arena* arena);
  DeclareRequest(::google::protobuf::Arena* arena, const DeclareRequest& from);
  DeclareRequest(::google::protobuf::Arena* arena, DeclareRequest&& from) noexcept
      : DeclareRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLabelsFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // repeated string labels = 2;
  int labels_size() const;
  private:
  int _internal_labels_size() const;

  public:
  void clear_labels() ;
  const std::string& labels(int index) const;
  std::string* mutable_labels(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_labels(int index, Arg_&& value, Args_... args);
  std::string* add_labels();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_labels(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_labels();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_labels() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_labels();

  public:
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.DeclareRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeclareRequest& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> labels_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class TaskNeed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.TaskNeed) */ {
 public:
  inline TaskNeed() : TaskNeed(nullptr) {}
  ~TaskNeed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TaskNeed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TaskNeed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskNeed(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskNeed(const TaskNeed& from) : TaskNeed(nullptr, from) {}
  inline TaskNeed(TaskNeed&& from) noexcept
      : TaskNeed(nullptr, std::move(from)) {}
  inline TaskNeed& operator=(const TaskNeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskNeed& operator=(TaskNeed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskNeed& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskNeed* internal_default_instance() {
    return reinterpret_cast<const TaskNeed*>(
        &_TaskNeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(TaskNeed& a, TaskNeed& b) { a.Swap(&b); }
  inline void Swap(TaskNeed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskNeed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskNeed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TaskNeed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskNeed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskNeed& from) { TaskNeed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TaskNeed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.TaskNeed"; }

 protected:
  explicit TaskNeed(::google::protobuf::Arena* arena);
  TaskNeed(::google::protobuf::Arena* arena, const TaskNeed& from);
  TaskNeed(::google::protobuf::Arena* arena, TaskNeed&& from) noexcept
      : TaskNeed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputsFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // map<string, string> outputs = 1;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  const ::google::protobuf::Map<std::string, std::string>& outputs() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_outputs();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_outputs() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_outputs();

  public:
  // .runner.v1.Result result = 2;
  void clear_result() ;
  ::runner::v1::Result result() const;
  void set_result(::runner::v1::Result value);

  private:
  ::runner::v1::Result _internal_result() const;
  void _internal_set_result(::runner::v1::Result value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.TaskNeed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskNeed& from_msg);
    ::google::protobuf::internal::MapField<TaskNeed_OutputsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        outputs_;
    int result_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class StepState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.StepState) */ {
 public:
  inline StepState() : StepState(nullptr) {}
  ~StepState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepState(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepState(const StepState& from) : StepState(nullptr, from) {}
  inline StepState(StepState&& from) noexcept
      : StepState(nullptr, std::move(from)) {}
  inline StepState& operator=(const StepState& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepState& operator=(StepState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepState& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepState* internal_default_instance() {
    return reinterpret_cast<const StepState*>(
        &_StepState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(StepState& a, StepState& b) { a.Swap(&b); }
  inline void Swap(StepState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepState& from) { StepState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.StepState"; }

 protected:
  explicit StepState(::google::protobuf::Arena* arena);
  StepState(::google::protobuf::Arena* arena, const StepState& from);
  StepState(::google::protobuf::Arena* arena, StepState&& from) noexcept
      : StepState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartedAtFieldNumber = 3,
    kStoppedAtFieldNumber = 4,
    kIdFieldNumber = 1,
    kLogIndexFieldNumber = 5,
    kLogLengthFieldNumber = 6,
    kResultFieldNumber = 2,
  };
  // .google.protobuf.Timestamp started_at = 3;
  bool has_started_at() const;
  void clear_started_at() ;
  const ::google::protobuf::Timestamp& started_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_started_at();
  ::google::protobuf::Timestamp* mutable_started_at();
  void set_allocated_started_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_started_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_started_at();

  private:
  const ::google::protobuf::Timestamp& _internal_started_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_started_at();

  public:
  // .google.protobuf.Timestamp stopped_at = 4;
  bool has_stopped_at() const;
  void clear_stopped_at() ;
  const ::google::protobuf::Timestamp& stopped_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_stopped_at();
  ::google::protobuf::Timestamp* mutable_stopped_at();
  void set_allocated_stopped_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_stopped_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_stopped_at();

  private:
  const ::google::protobuf::Timestamp& _internal_stopped_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_stopped_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 log_index = 5;
  void clear_log_index() ;
  ::int64_t log_index() const;
  void set_log_index(::int64_t value);

  private:
  ::int64_t _internal_log_index() const;
  void _internal_set_log_index(::int64_t value);

  public:
  // int64 log_length = 6;
  void clear_log_length() ;
  ::int64_t log_length() const;
  void set_log_length(::int64_t value);

  private:
  ::int64_t _internal_log_length() const;
  void _internal_set_log_length(::int64_t value);

  public:
  // .runner.v1.Result result = 2;
  void clear_result() ;
  ::runner::v1::Result result() const;
  void set_result(::runner::v1::Result value);

  private:
  ::runner::v1::Result _internal_result() const;
  void _internal_set_result(::runner::v1::Result value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.StepState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* started_at_;
    ::google::protobuf::Timestamp* stopped_at_;
    ::int64_t id_;
    ::int64_t log_index_;
    ::int64_t log_length_;
    int result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class RegisterResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.RegisterResponse) */ {
 public:
  inline RegisterResponse() : RegisterResponse(nullptr) {}
  ~RegisterResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RegisterResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RegisterResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RegisterResponse(const RegisterResponse& from) : RegisterResponse(nullptr, from) {}
  inline RegisterResponse(RegisterResponse&& from) noexcept
      : RegisterResponse(nullptr, std::move(from)) {}
  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterResponse& operator=(RegisterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterResponse*>(
        &_RegisterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RegisterResponse& a, RegisterResponse& b) { a.Swap(&b); }
  inline void Swap(RegisterResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RegisterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RegisterResponse& from) { RegisterResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RegisterResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.RegisterResponse"; }

 protected:
  explicit RegisterResponse(::google::protobuf::Arena* arena);
  RegisterResponse(::google::protobuf::Arena* arena, const RegisterResponse& from);
  RegisterResponse(::google::protobuf::Arena* arena, RegisterResponse&& from) noexcept
      : RegisterResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRunnerFieldNumber = 1,
  };
  // .runner.v1.Runner runner = 1;
  bool has_runner() const;
  void clear_runner() ;
  const ::runner::v1::Runner& runner() const;
  PROTOBUF_NODISCARD ::runner::v1::Runner* release_runner();
  ::runner::v1::Runner* mutable_runner();
  void set_allocated_runner(::runner::v1::Runner* value);
  void unsafe_arena_set_allocated_runner(::runner::v1::Runner* value);
  ::runner::v1::Runner* unsafe_arena_release_runner();

  private:
  const ::runner::v1::Runner& _internal_runner() const;
  ::runner::v1::Runner* _internal_mutable_runner();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.RegisterResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RegisterResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::runner::v1::Runner* runner_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class LogRow final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.LogRow) */ {
 public:
  inline LogRow() : LogRow(nullptr) {}
  ~LogRow() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LogRow* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LogRow));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LogRow(
      ::google::protobuf::internal::ConstantInitialized);

  inline LogRow(const LogRow& from) : LogRow(nullptr, from) {}
  inline LogRow(LogRow&& from) noexcept
      : LogRow(nullptr, std::move(from)) {}
  inline LogRow& operator=(const LogRow& from) {
    CopyFrom(from);
    return *this;
  }
  inline LogRow& operator=(LogRow&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LogRow& default_instance() {
    return *internal_default_instance();
  }
  static inline const LogRow* internal_default_instance() {
    return reinterpret_cast<const LogRow*>(
        &_LogRow_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(LogRow& a, LogRow& b) { a.Swap(&b); }
  inline void Swap(LogRow* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LogRow* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LogRow* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LogRow>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LogRow& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LogRow& from) { LogRow::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LogRow* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.LogRow"; }

 protected:
  explicit LogRow(::google::protobuf::Arena* arena);
  LogRow(::google::protobuf::Arena* arena, const LogRow& from);
  LogRow(::google::protobuf::Arena* arena, LogRow&& from) noexcept
      : LogRow(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 2,
    kTimeFieldNumber = 1,
  };
  // string content = 2;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // .google.protobuf.Timestamp time = 1;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_time();
  ::google::protobuf::Timestamp* mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_time();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.LogRow)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LogRow& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::google::protobuf::Timestamp* time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class DeclareResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.DeclareResponse) */ {
 public:
  inline DeclareResponse() : DeclareResponse(nullptr) {}
  ~DeclareResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeclareResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeclareResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeclareResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeclareResponse(const DeclareResponse& from) : DeclareResponse(nullptr, from) {}
  inline DeclareResponse(DeclareResponse&& from) noexcept
      : DeclareResponse(nullptr, std::move(from)) {}
  inline DeclareResponse& operator=(const DeclareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeclareResponse& operator=(DeclareResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeclareResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeclareResponse* internal_default_instance() {
    return reinterpret_cast<const DeclareResponse*>(
        &_DeclareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DeclareResponse& a, DeclareResponse& b) { a.Swap(&b); }
  inline void Swap(DeclareResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeclareResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeclareResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeclareResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeclareResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeclareResponse& from) { DeclareResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeclareResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.DeclareResponse"; }

 protected:
  explicit DeclareResponse(::google::protobuf::Arena* arena);
  DeclareResponse(::google::protobuf::Arena* arena, const DeclareResponse& from);
  DeclareResponse(::google::protobuf::Arena* arena, DeclareResponse&& from) noexcept
      : DeclareResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRunnerFieldNumber = 1,
  };
  // .runner.v1.Runner runner = 1;
  bool has_runner() const;
  void clear_runner() ;
  const ::runner::v1::Runner& runner() const;
  PROTOBUF_NODISCARD ::runner::v1::Runner* release_runner();
  ::runner::v1::Runner* mutable_runner();
  void set_allocated_runner(::runner::v1::Runner* value);
  void unsafe_arena_set_allocated_runner(::runner::v1::Runner* value);
  ::runner::v1::Runner* unsafe_arena_release_runner();

  private:
  const ::runner::v1::Runner& _internal_runner() const;
  ::runner::v1::Runner* _internal_mutable_runner();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.DeclareResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeclareResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::runner::v1::Runner* runner_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class UpdateLogRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.UpdateLogRequest) */ {
 public:
  inline UpdateLogRequest() : UpdateLogRequest(nullptr) {}
  ~UpdateLogRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateLogRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateLogRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateLogRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateLogRequest(const UpdateLogRequest& from) : UpdateLogRequest(nullptr, from) {}
  inline UpdateLogRequest(UpdateLogRequest&& from) noexcept
      : UpdateLogRequest(nullptr, std::move(from)) {}
  inline UpdateLogRequest& operator=(const UpdateLogRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateLogRequest& operator=(UpdateLogRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateLogRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateLogRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateLogRequest*>(
        &_UpdateLogRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(UpdateLogRequest& a, UpdateLogRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateLogRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateLogRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateLogRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateLogRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateLogRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateLogRequest& from) { UpdateLogRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateLogRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.UpdateLogRequest"; }

 protected:
  explicit UpdateLogRequest(::google::protobuf::Arena* arena);
  UpdateLogRequest(::google::protobuf::Arena* arena, const UpdateLogRequest& from);
  UpdateLogRequest(::google::protobuf::Arena* arena, UpdateLogRequest&& from) noexcept
      : UpdateLogRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRowsFieldNumber = 3,
    kTaskIdFieldNumber = 1,
    kIndexFieldNumber = 2,
    kNoMoreFieldNumber = 4,
  };
  // repeated .runner.v1.LogRow rows = 3;
  int rows_size() const;
  private:
  int _internal_rows_size() const;

  public:
  void clear_rows() ;
  ::runner::v1::LogRow* mutable_rows(int index);
  ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>* mutable_rows();

  private:
  const ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>& _internal_rows() const;
  ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>* _internal_mutable_rows();
  public:
  const ::runner::v1::LogRow& rows(int index) const;
  ::runner::v1::LogRow* add_rows();
  const ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>& rows() const;
  // int64 task_id = 1;
  void clear_task_id() ;
  ::int64_t task_id() const;
  void set_task_id(::int64_t value);

  private:
  ::int64_t _internal_task_id() const;
  void _internal_set_task_id(::int64_t value);

  public:
  // int64 index = 2;
  void clear_index() ;
  ::int64_t index() const;
  void set_index(::int64_t value);

  private:
  ::int64_t _internal_index() const;
  void _internal_set_index(::int64_t value);

  public:
  // bool no_more = 4;
  void clear_no_more() ;
  bool no_more() const;
  void set_no_more(bool value);

  private:
  bool _internal_no_more() const;
  void _internal_set_no_more(bool value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.UpdateLogRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateLogRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::runner::v1::LogRow > rows_;
    ::int64_t task_id_;
    ::int64_t index_;
    bool no_more_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class TaskState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.TaskState) */ {
 public:
  inline TaskState() : TaskState(nullptr) {}
  ~TaskState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TaskState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TaskState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TaskState(
      ::google::protobuf::internal::ConstantInitialized);

  inline TaskState(const TaskState& from) : TaskState(nullptr, from) {}
  inline TaskState(TaskState&& from) noexcept
      : TaskState(nullptr, std::move(from)) {}
  inline TaskState& operator=(const TaskState& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskState& operator=(TaskState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskState& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskState* internal_default_instance() {
    return reinterpret_cast<const TaskState*>(
        &_TaskState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(TaskState& a, TaskState& b) { a.Swap(&b); }
  inline void Swap(TaskState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TaskState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TaskState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TaskState& from) { TaskState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TaskState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.TaskState"; }

 protected:
  explicit TaskState(::google::protobuf::Arena* arena);
  TaskState(::google::protobuf::Arena* arena, const TaskState& from);
  TaskState(::google::protobuf::Arena* arena, TaskState&& from) noexcept
      : TaskState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStepsFieldNumber = 5,
    kStartedAtFieldNumber = 3,
    kStoppedAtFieldNumber = 4,
    kIdFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // repeated .runner.v1.StepState steps = 5;
  int steps_size() const;
  private:
  int _internal_steps_size() const;

  public:
  void clear_steps() ;
  ::runner::v1::StepState* mutable_steps(int index);
  ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>* mutable_steps();

  private:
  const ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>& _internal_steps() const;
  ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>* _internal_mutable_steps();
  public:
  const ::runner::v1::StepState& steps(int index) const;
  ::runner::v1::StepState* add_steps();
  const ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>& steps() const;
  // .google.protobuf.Timestamp started_at = 3;
  bool has_started_at() const;
  void clear_started_at() ;
  const ::google::protobuf::Timestamp& started_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_started_at();
  ::google::protobuf::Timestamp* mutable_started_at();
  void set_allocated_started_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_started_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_started_at();

  private:
  const ::google::protobuf::Timestamp& _internal_started_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_started_at();

  public:
  // .google.protobuf.Timestamp stopped_at = 4;
  bool has_stopped_at() const;
  void clear_stopped_at() ;
  const ::google::protobuf::Timestamp& stopped_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_stopped_at();
  ::google::protobuf::Timestamp* mutable_stopped_at();
  void set_allocated_stopped_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_stopped_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_stopped_at();

  private:
  const ::google::protobuf::Timestamp& _internal_stopped_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_stopped_at();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // .runner.v1.Result result = 2;
  void clear_result() ;
  ::runner::v1::Result result() const;
  void set_result(::runner::v1::Result value);

  private:
  ::runner::v1::Result _internal_result() const;
  void _internal_set_result(::runner::v1::Result value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.TaskState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TaskState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::runner::v1::StepState > steps_;
    ::google::protobuf::Timestamp* started_at_;
    ::google::protobuf::Timestamp* stopped_at_;
    ::int64_t id_;
    int result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class Task_NeedsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Task_NeedsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Task_NeedsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Task_NeedsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Task_NeedsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Task_NeedsEntry_DoNotUse*>(
        &_Task_NeedsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      37, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class UpdateTaskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.UpdateTaskResponse) */ {
 public:
  inline UpdateTaskResponse() : UpdateTaskResponse(nullptr) {}
  ~UpdateTaskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateTaskResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateTaskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTaskResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateTaskResponse(const UpdateTaskResponse& from) : UpdateTaskResponse(nullptr, from) {}
  inline UpdateTaskResponse(UpdateTaskResponse&& from) noexcept
      : UpdateTaskResponse(nullptr, std::move(from)) {}
  inline UpdateTaskResponse& operator=(const UpdateTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateTaskResponse& operator=(UpdateTaskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateTaskResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateTaskResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateTaskResponse*>(
        &_UpdateTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(UpdateTaskResponse& a, UpdateTaskResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateTaskResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateTaskResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateTaskResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateTaskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateTaskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateTaskResponse& from) { UpdateTaskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateTaskResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.UpdateTaskResponse"; }

 protected:
  explicit UpdateTaskResponse(::google::protobuf::Arena* arena);
  UpdateTaskResponse(::google::protobuf::Arena* arena, const UpdateTaskResponse& from);
  UpdateTaskResponse(::google::protobuf::Arena* arena, UpdateTaskResponse&& from) noexcept
      : UpdateTaskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSentOutputsFieldNumber = 2,
    kStateFieldNumber = 1,
  };
  // repeated string sent_outputs = 2;
  int sent_outputs_size() const;
  private:
  int _internal_sent_outputs_size() const;

  public:
  void clear_sent_outputs() ;
  const std::string& sent_outputs(int index) const;
  std::string* mutable_sent_outputs(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sent_outputs(int index, Arg_&& value, Args_... args);
  std::string* add_sent_outputs();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_sent_outputs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& sent_outputs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sent_outputs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sent_outputs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sent_outputs();

  public:
  // .runner.v1.TaskState state = 1;
  bool has_state() const;
  void clear_state() ;
  const ::runner::v1::TaskState& state() const;
  PROTOBUF_NODISCARD ::runner::v1::TaskState* release_state();
  ::runner::v1::TaskState* mutable_state();
  void set_allocated_state(::runner::v1::TaskState* value);
  void unsafe_arena_set_allocated_state(::runner::v1::TaskState* value);
  ::runner::v1::TaskState* unsafe_arena_release_state();

  private:
  const ::runner::v1::TaskState& _internal_state() const;
  ::runner::v1::TaskState* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.UpdateTaskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateTaskResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> sent_outputs_;
    ::runner::v1::TaskState* state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class UpdateTaskRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.UpdateTaskRequest) */ {
 public:
  inline UpdateTaskRequest() : UpdateTaskRequest(nullptr) {}
  ~UpdateTaskRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateTaskRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateTaskRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateTaskRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateTaskRequest(const UpdateTaskRequest& from) : UpdateTaskRequest(nullptr, from) {}
  inline UpdateTaskRequest(UpdateTaskRequest&& from) noexcept
      : UpdateTaskRequest(nullptr, std::move(from)) {}
  inline UpdateTaskRequest& operator=(const UpdateTaskRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateTaskRequest& operator=(UpdateTaskRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateTaskRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateTaskRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateTaskRequest*>(
        &_UpdateTaskRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(UpdateTaskRequest& a, UpdateTaskRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateTaskRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateTaskRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateTaskRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateTaskRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateTaskRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateTaskRequest& from) { UpdateTaskRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateTaskRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.UpdateTaskRequest"; }

 protected:
  explicit UpdateTaskRequest(::google::protobuf::Arena* arena);
  UpdateTaskRequest(::google::protobuf::Arena* arena, const UpdateTaskRequest& from);
  UpdateTaskRequest(::google::protobuf::Arena* arena, UpdateTaskRequest&& from) noexcept
      : UpdateTaskRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputsFieldNumber = 2,
    kStateFieldNumber = 1,
  };
  // map<string, string> outputs = 2;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  const ::google::protobuf::Map<std::string, std::string>& outputs() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_outputs();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_outputs() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_outputs();

  public:
  // .runner.v1.TaskState state = 1;
  bool has_state() const;
  void clear_state() ;
  const ::runner::v1::TaskState& state() const;
  PROTOBUF_NODISCARD ::runner::v1::TaskState* release_state();
  ::runner::v1::TaskState* mutable_state();
  void set_allocated_state(::runner::v1::TaskState* value);
  void unsafe_arena_set_allocated_state(::runner::v1::TaskState* value);
  ::runner::v1::TaskState* unsafe_arena_release_state();

  private:
  const ::runner::v1::TaskState& _internal_state() const;
  ::runner::v1::TaskState* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.UpdateTaskRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateTaskRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<UpdateTaskRequest_OutputsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        outputs_;
    ::runner::v1::TaskState* state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class Task final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.Task) */ {
 public:
  inline Task() : Task(nullptr) {}
  ~Task() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Task* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Task));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Task(
      ::google::protobuf::internal::ConstantInitialized);

  inline Task(const Task& from) : Task(nullptr, from) {}
  inline Task(Task&& from) noexcept
      : Task(nullptr, std::move(from)) {}
  inline Task& operator=(const Task& from) {
    CopyFrom(from);
    return *this;
  }
  inline Task& operator=(Task&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Task& default_instance() {
    return *internal_default_instance();
  }
  static inline const Task* internal_default_instance() {
    return reinterpret_cast<const Task*>(
        &_Task_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(Task& a, Task& b) { a.Swap(&b); }
  inline void Swap(Task* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Task* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Task* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Task>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Task& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Task& from) { Task::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Task* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.Task"; }

 protected:
  explicit Task(::google::protobuf::Arena* arena);
  Task(::google::protobuf::Arena* arena, const Task& from);
  Task(::google::protobuf::Arena* arena, Task&& from) noexcept
      : Task(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSecretsFieldNumber = 4,
    kNeedsFieldNumber = 6,
    kVarsFieldNumber = 7,
    kWorkflowPayloadFieldNumber = 2,
    kMachineFieldNumber = 5,
    kContextFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // map<string, string> secrets = 4;
  int secrets_size() const;
  private:
  int _internal_secrets_size() const;

  public:
  void clear_secrets() ;
  const ::google::protobuf::Map<std::string, std::string>& secrets() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_secrets();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_secrets() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_secrets();

  public:
  // map<string, .runner.v1.TaskNeed> needs = 6;
  int needs_size() const;
  private:
  int _internal_needs_size() const;

  public:
  void clear_needs() ;
  const ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>& needs() const;
  ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>* mutable_needs();

  private:
  const ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>& _internal_needs() const;
  ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>* _internal_mutable_needs();

  public:
  // map<string, string> vars = 7;
  int vars_size() const;
  private:
  int _internal_vars_size() const;

  public:
  void clear_vars() ;
  const ::google::protobuf::Map<std::string, std::string>& vars() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_vars();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_vars() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_vars();

  public:
  // optional bytes workflow_payload = 2;
  bool has_workflow_payload() const;
  void clear_workflow_payload() ;
  const std::string& workflow_payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_workflow_payload(Arg_&& arg, Args_... args);
  std::string* mutable_workflow_payload();
  PROTOBUF_NODISCARD std::string* release_workflow_payload();
  void set_allocated_workflow_payload(std::string* value);

  private:
  const std::string& _internal_workflow_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_workflow_payload(
      const std::string& value);
  std::string* _internal_mutable_workflow_payload();

  public:
  // string machine = 5 [deprecated = true];
  [[deprecated]]  void clear_machine() ;
  [[deprecated]] const std::string& machine() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_machine(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_machine();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_machine();
  [[deprecated]] void set_allocated_machine(std::string* value);

  private:
  const std::string& _internal_machine() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_machine(
      const std::string& value);
  std::string* _internal_mutable_machine();

  public:
  // optional .google.protobuf.Struct context = 3;
  bool has_context() const;
  void clear_context() ;
  const ::google::protobuf::Struct& context() const;
  PROTOBUF_NODISCARD ::google::protobuf::Struct* release_context();
  ::google::protobuf::Struct* mutable_context();
  void set_allocated_context(::google::protobuf::Struct* value);
  void unsafe_arena_set_allocated_context(::google::protobuf::Struct* value);
  ::google::protobuf::Struct* unsafe_arena_release_context();

  private:
  const ::google::protobuf::Struct& _internal_context() const;
  ::google::protobuf::Struct* _internal_mutable_context();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.Task)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 5,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Task& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Task_SecretsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        secrets_;
    ::google::protobuf::internal::MapField<Task_NeedsEntry_DoNotUse, std::string, ::runner::v1::TaskNeed,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        needs_;
    ::google::protobuf::internal::MapField<Task_VarsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        vars_;
    ::google::protobuf::internal::ArenaStringPtr workflow_payload_;
    ::google::protobuf::internal::ArenaStringPtr machine_;
    ::google::protobuf::Struct* context_;
    ::int64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};
// -------------------------------------------------------------------

class FetchTaskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:runner.v1.FetchTaskResponse) */ {
 public:
  inline FetchTaskResponse() : FetchTaskResponse(nullptr) {}
  ~FetchTaskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FetchTaskResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FetchTaskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FetchTaskResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FetchTaskResponse(const FetchTaskResponse& from) : FetchTaskResponse(nullptr, from) {}
  inline FetchTaskResponse(FetchTaskResponse&& from) noexcept
      : FetchTaskResponse(nullptr, std::move(from)) {}
  inline FetchTaskResponse& operator=(const FetchTaskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FetchTaskResponse& operator=(FetchTaskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FetchTaskResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FetchTaskResponse* internal_default_instance() {
    return reinterpret_cast<const FetchTaskResponse*>(
        &_FetchTaskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(FetchTaskResponse& a, FetchTaskResponse& b) { a.Swap(&b); }
  inline void Swap(FetchTaskResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FetchTaskResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FetchTaskResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FetchTaskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FetchTaskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FetchTaskResponse& from) { FetchTaskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FetchTaskResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "runner.v1.FetchTaskResponse"; }

 protected:
  explicit FetchTaskResponse(::google::protobuf::Arena* arena);
  FetchTaskResponse(::google::protobuf::Arena* arena, const FetchTaskResponse& from);
  FetchTaskResponse(::google::protobuf::Arena* arena, FetchTaskResponse&& from) noexcept
      : FetchTaskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTaskFieldNumber = 1,
    kTasksVersionFieldNumber = 2,
  };
  // .runner.v1.Task task = 1;
  bool has_task() const;
  void clear_task() ;
  const ::runner::v1::Task& task() const;
  PROTOBUF_NODISCARD ::runner::v1::Task* release_task();
  ::runner::v1::Task* mutable_task();
  void set_allocated_task(::runner::v1::Task* value);
  void unsafe_arena_set_allocated_task(::runner::v1::Task* value);
  ::runner::v1::Task* unsafe_arena_release_task();

  private:
  const ::runner::v1::Task& _internal_task() const;
  ::runner::v1::Task* _internal_mutable_task();

  public:
  // int64 tasks_version = 2;
  void clear_tasks_version() ;
  ::int64_t tasks_version() const;
  void set_tasks_version(::int64_t value);

  private:
  ::int64_t _internal_tasks_version() const;
  void _internal_set_tasks_version(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:runner.v1.FetchTaskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FetchTaskResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::runner::v1::Task* task_;
    ::int64_t tasks_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_runner_2fv1_2fmessages_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// RegisterRequest

// string name = 1;
inline void RegisterRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RegisterRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.RegisterRequest.name)
}
inline std::string* RegisterRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterRequest.name)
  return _s;
}
inline const std::string& RegisterRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void RegisterRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* RegisterRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* RegisterRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.RegisterRequest.name)
  return _impl_.name_.Release();
}
inline void RegisterRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.RegisterRequest.name)
}

// string token = 2;
inline void RegisterRequest::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& RegisterRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.RegisterRequest.token)
}
inline std::string* RegisterRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterRequest.token)
  return _s;
}
inline const std::string& RegisterRequest::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void RegisterRequest::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* RegisterRequest::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* RegisterRequest::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.RegisterRequest.token)
  return _impl_.token_.Release();
}
inline void RegisterRequest::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.RegisterRequest.token)
}

// repeated string agent_labels = 3 [deprecated = true];
inline int RegisterRequest::_internal_agent_labels_size() const {
  return _internal_agent_labels().size();
}
inline int RegisterRequest::agent_labels_size() const {
  return _internal_agent_labels_size();
}
inline void RegisterRequest::clear_agent_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_labels_.Clear();
}
inline std::string* RegisterRequest::add_agent_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_agent_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.RegisterRequest.agent_labels)
  return _s;
}
inline const std::string& RegisterRequest::agent_labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterRequest.agent_labels)
  return _internal_agent_labels().Get(index);
}
inline std::string* RegisterRequest::mutable_agent_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterRequest.agent_labels)
  return _internal_mutable_agent_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RegisterRequest::set_agent_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_agent_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.RegisterRequest.agent_labels)
}
template <typename Arg_, typename... Args_>
inline void RegisterRequest::add_agent_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_agent_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.RegisterRequest.agent_labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisterRequest::agent_labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.RegisterRequest.agent_labels)
  return _internal_agent_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisterRequest::mutable_agent_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.RegisterRequest.agent_labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisterRequest::_internal_agent_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisterRequest::_internal_mutable_agent_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_labels_;
}

// repeated string custom_labels = 4 [deprecated = true];
inline int RegisterRequest::_internal_custom_labels_size() const {
  return _internal_custom_labels().size();
}
inline int RegisterRequest::custom_labels_size() const {
  return _internal_custom_labels_size();
}
inline void RegisterRequest::clear_custom_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_labels_.Clear();
}
inline std::string* RegisterRequest::add_custom_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_custom_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.RegisterRequest.custom_labels)
  return _s;
}
inline const std::string& RegisterRequest::custom_labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterRequest.custom_labels)
  return _internal_custom_labels().Get(index);
}
inline std::string* RegisterRequest::mutable_custom_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterRequest.custom_labels)
  return _internal_mutable_custom_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RegisterRequest::set_custom_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_custom_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.RegisterRequest.custom_labels)
}
template <typename Arg_, typename... Args_>
inline void RegisterRequest::add_custom_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_custom_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.RegisterRequest.custom_labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisterRequest::custom_labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.RegisterRequest.custom_labels)
  return _internal_custom_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisterRequest::mutable_custom_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.RegisterRequest.custom_labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_custom_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisterRequest::_internal_custom_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisterRequest::_internal_mutable_custom_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.custom_labels_;
}

// string version = 5;
inline void RegisterRequest::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& RegisterRequest::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterRequest.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterRequest::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.RegisterRequest.version)
}
inline std::string* RegisterRequest::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterRequest.version)
  return _s;
}
inline const std::string& RegisterRequest::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void RegisterRequest::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* RegisterRequest::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* RegisterRequest::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.RegisterRequest.version)
  return _impl_.version_.Release();
}
inline void RegisterRequest::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.RegisterRequest.version)
}

// repeated string labels = 6;
inline int RegisterRequest::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int RegisterRequest::labels_size() const {
  return _internal_labels_size();
}
inline void RegisterRequest::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* RegisterRequest::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.RegisterRequest.labels)
  return _s;
}
inline const std::string& RegisterRequest::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterRequest.labels)
  return _internal_labels().Get(index);
}
inline std::string* RegisterRequest::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterRequest.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RegisterRequest::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.RegisterRequest.labels)
}
template <typename Arg_, typename... Args_>
inline void RegisterRequest::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.RegisterRequest.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisterRequest::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.RegisterRequest.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisterRequest::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.RegisterRequest.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
RegisterRequest::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
RegisterRequest::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// RegisterResponse

// .runner.v1.Runner runner = 1;
inline bool RegisterResponse::has_runner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.runner_ != nullptr);
  return value;
}
inline void RegisterResponse::clear_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.runner_ != nullptr) _impl_.runner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::runner::v1::Runner& RegisterResponse::_internal_runner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::runner::v1::Runner* p = _impl_.runner_;
  return p != nullptr ? *p : reinterpret_cast<const ::runner::v1::Runner&>(::runner::v1::_Runner_default_instance_);
}
inline const ::runner::v1::Runner& RegisterResponse::runner() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.RegisterResponse.runner)
  return _internal_runner();
}
inline void RegisterResponse::unsafe_arena_set_allocated_runner(::runner::v1::Runner* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.runner_);
  }
  _impl_.runner_ = reinterpret_cast<::runner::v1::Runner*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.RegisterResponse.runner)
}
inline ::runner::v1::Runner* RegisterResponse::release_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::Runner* released = _impl_.runner_;
  _impl_.runner_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::runner::v1::Runner* RegisterResponse::unsafe_arena_release_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.RegisterResponse.runner)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::Runner* temp = _impl_.runner_;
  _impl_.runner_ = nullptr;
  return temp;
}
inline ::runner::v1::Runner* RegisterResponse::_internal_mutable_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.runner_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::runner::v1::Runner>(GetArena());
    _impl_.runner_ = reinterpret_cast<::runner::v1::Runner*>(p);
  }
  return _impl_.runner_;
}
inline ::runner::v1::Runner* RegisterResponse::mutable_runner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::runner::v1::Runner* _msg = _internal_mutable_runner();
  // @@protoc_insertion_point(field_mutable:runner.v1.RegisterResponse.runner)
  return _msg;
}
inline void RegisterResponse::set_allocated_runner(::runner::v1::Runner* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.runner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.runner_ = reinterpret_cast<::runner::v1::Runner*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.RegisterResponse.runner)
}

// -------------------------------------------------------------------

// DeclareRequest

// string version = 1;
inline void DeclareRequest::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& DeclareRequest::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.DeclareRequest.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeclareRequest::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.DeclareRequest.version)
}
inline std::string* DeclareRequest::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:runner.v1.DeclareRequest.version)
  return _s;
}
inline const std::string& DeclareRequest::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void DeclareRequest::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* DeclareRequest::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* DeclareRequest::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.DeclareRequest.version)
  return _impl_.version_.Release();
}
inline void DeclareRequest::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.DeclareRequest.version)
}

// repeated string labels = 2;
inline int DeclareRequest::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int DeclareRequest::labels_size() const {
  return _internal_labels_size();
}
inline void DeclareRequest::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* DeclareRequest::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.DeclareRequest.labels)
  return _s;
}
inline const std::string& DeclareRequest::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.DeclareRequest.labels)
  return _internal_labels().Get(index);
}
inline std::string* DeclareRequest::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.DeclareRequest.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void DeclareRequest::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.DeclareRequest.labels)
}
template <typename Arg_, typename... Args_>
inline void DeclareRequest::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.DeclareRequest.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeclareRequest::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.DeclareRequest.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeclareRequest::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.DeclareRequest.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
DeclareRequest::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
DeclareRequest::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// DeclareResponse

// .runner.v1.Runner runner = 1;
inline bool DeclareResponse::has_runner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.runner_ != nullptr);
  return value;
}
inline void DeclareResponse::clear_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.runner_ != nullptr) _impl_.runner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::runner::v1::Runner& DeclareResponse::_internal_runner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::runner::v1::Runner* p = _impl_.runner_;
  return p != nullptr ? *p : reinterpret_cast<const ::runner::v1::Runner&>(::runner::v1::_Runner_default_instance_);
}
inline const ::runner::v1::Runner& DeclareResponse::runner() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.DeclareResponse.runner)
  return _internal_runner();
}
inline void DeclareResponse::unsafe_arena_set_allocated_runner(::runner::v1::Runner* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.runner_);
  }
  _impl_.runner_ = reinterpret_cast<::runner::v1::Runner*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.DeclareResponse.runner)
}
inline ::runner::v1::Runner* DeclareResponse::release_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::Runner* released = _impl_.runner_;
  _impl_.runner_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::runner::v1::Runner* DeclareResponse::unsafe_arena_release_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.DeclareResponse.runner)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::Runner* temp = _impl_.runner_;
  _impl_.runner_ = nullptr;
  return temp;
}
inline ::runner::v1::Runner* DeclareResponse::_internal_mutable_runner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.runner_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::runner::v1::Runner>(GetArena());
    _impl_.runner_ = reinterpret_cast<::runner::v1::Runner*>(p);
  }
  return _impl_.runner_;
}
inline ::runner::v1::Runner* DeclareResponse::mutable_runner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::runner::v1::Runner* _msg = _internal_mutable_runner();
  // @@protoc_insertion_point(field_mutable:runner.v1.DeclareResponse.runner)
  return _msg;
}
inline void DeclareResponse::set_allocated_runner(::runner::v1::Runner* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.runner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.runner_ = reinterpret_cast<::runner::v1::Runner*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.DeclareResponse.runner)
}

// -------------------------------------------------------------------

// FetchTaskRequest

// int64 tasks_version = 1;
inline void FetchTaskRequest::clear_tasks_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_version_ = ::int64_t{0};
}
inline ::int64_t FetchTaskRequest::tasks_version() const {
  // @@protoc_insertion_point(field_get:runner.v1.FetchTaskRequest.tasks_version)
  return _internal_tasks_version();
}
inline void FetchTaskRequest::set_tasks_version(::int64_t value) {
  _internal_set_tasks_version(value);
  // @@protoc_insertion_point(field_set:runner.v1.FetchTaskRequest.tasks_version)
}
inline ::int64_t FetchTaskRequest::_internal_tasks_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tasks_version_;
}
inline void FetchTaskRequest::_internal_set_tasks_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_version_ = value;
}

// -------------------------------------------------------------------

// FetchTaskResponse

// .runner.v1.Task task = 1;
inline bool FetchTaskResponse::has_task() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.task_ != nullptr);
  return value;
}
inline void FetchTaskResponse::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::runner::v1::Task& FetchTaskResponse::_internal_task() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::runner::v1::Task* p = _impl_.task_;
  return p != nullptr ? *p : reinterpret_cast<const ::runner::v1::Task&>(::runner::v1::_Task_default_instance_);
}
inline const ::runner::v1::Task& FetchTaskResponse::task() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.FetchTaskResponse.task)
  return _internal_task();
}
inline void FetchTaskResponse::unsafe_arena_set_allocated_task(::runner::v1::Task* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.task_);
  }
  _impl_.task_ = reinterpret_cast<::runner::v1::Task*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.FetchTaskResponse.task)
}
inline ::runner::v1::Task* FetchTaskResponse::release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::Task* released = _impl_.task_;
  _impl_.task_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::runner::v1::Task* FetchTaskResponse::unsafe_arena_release_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.FetchTaskResponse.task)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::Task* temp = _impl_.task_;
  _impl_.task_ = nullptr;
  return temp;
}
inline ::runner::v1::Task* FetchTaskResponse::_internal_mutable_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::runner::v1::Task>(GetArena());
    _impl_.task_ = reinterpret_cast<::runner::v1::Task*>(p);
  }
  return _impl_.task_;
}
inline ::runner::v1::Task* FetchTaskResponse::mutable_task() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::runner::v1::Task* _msg = _internal_mutable_task();
  // @@protoc_insertion_point(field_mutable:runner.v1.FetchTaskResponse.task)
  return _msg;
}
inline void FetchTaskResponse::set_allocated_task(::runner::v1::Task* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.task_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.task_ = reinterpret_cast<::runner::v1::Task*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.FetchTaskResponse.task)
}

// int64 tasks_version = 2;
inline void FetchTaskResponse::clear_tasks_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_version_ = ::int64_t{0};
}
inline ::int64_t FetchTaskResponse::tasks_version() const {
  // @@protoc_insertion_point(field_get:runner.v1.FetchTaskResponse.tasks_version)
  return _internal_tasks_version();
}
inline void FetchTaskResponse::set_tasks_version(::int64_t value) {
  _internal_set_tasks_version(value);
  // @@protoc_insertion_point(field_set:runner.v1.FetchTaskResponse.tasks_version)
}
inline ::int64_t FetchTaskResponse::_internal_tasks_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tasks_version_;
}
inline void FetchTaskResponse::_internal_set_tasks_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tasks_version_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdateTaskRequest

// .runner.v1.TaskState state = 1;
inline bool UpdateTaskRequest::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline void UpdateTaskRequest::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::runner::v1::TaskState& UpdateTaskRequest::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::runner::v1::TaskState* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::runner::v1::TaskState&>(::runner::v1::_TaskState_default_instance_);
}
inline const ::runner::v1::TaskState& UpdateTaskRequest::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateTaskRequest.state)
  return _internal_state();
}
inline void UpdateTaskRequest::unsafe_arena_set_allocated_state(::runner::v1::TaskState* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::runner::v1::TaskState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.UpdateTaskRequest.state)
}
inline ::runner::v1::TaskState* UpdateTaskRequest::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::TaskState* released = _impl_.state_;
  _impl_.state_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::runner::v1::TaskState* UpdateTaskRequest::unsafe_arena_release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.UpdateTaskRequest.state)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::TaskState* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::runner::v1::TaskState* UpdateTaskRequest::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::runner::v1::TaskState>(GetArena());
    _impl_.state_ = reinterpret_cast<::runner::v1::TaskState*>(p);
  }
  return _impl_.state_;
}
inline ::runner::v1::TaskState* UpdateTaskRequest::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::runner::v1::TaskState* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:runner.v1.UpdateTaskRequest.state)
  return _msg;
}
inline void UpdateTaskRequest::set_allocated_state(::runner::v1::TaskState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.state_ = reinterpret_cast<::runner::v1::TaskState*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.UpdateTaskRequest.state)
}

// map<string, string> outputs = 2;
inline int UpdateTaskRequest::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int UpdateTaskRequest::outputs_size() const {
  return _internal_outputs_size();
}
inline void UpdateTaskRequest::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateTaskRequest::_internal_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outputs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& UpdateTaskRequest::outputs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:runner.v1.UpdateTaskRequest.outputs)
  return _internal_outputs();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdateTaskRequest::_internal_mutable_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.outputs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* UpdateTaskRequest::mutable_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:runner.v1.UpdateTaskRequest.outputs)
  return _internal_mutable_outputs();
}

// -------------------------------------------------------------------

// UpdateTaskResponse

// .runner.v1.TaskState state = 1;
inline bool UpdateTaskResponse::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.state_ != nullptr);
  return value;
}
inline void UpdateTaskResponse::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ != nullptr) _impl_.state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::runner::v1::TaskState& UpdateTaskResponse::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::runner::v1::TaskState* p = _impl_.state_;
  return p != nullptr ? *p : reinterpret_cast<const ::runner::v1::TaskState&>(::runner::v1::_TaskState_default_instance_);
}
inline const ::runner::v1::TaskState& UpdateTaskResponse::state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateTaskResponse.state)
  return _internal_state();
}
inline void UpdateTaskResponse::unsafe_arena_set_allocated_state(::runner::v1::TaskState* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.state_);
  }
  _impl_.state_ = reinterpret_cast<::runner::v1::TaskState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.UpdateTaskResponse.state)
}
inline ::runner::v1::TaskState* UpdateTaskResponse::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::TaskState* released = _impl_.state_;
  _impl_.state_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::runner::v1::TaskState* UpdateTaskResponse::unsafe_arena_release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.UpdateTaskResponse.state)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::runner::v1::TaskState* temp = _impl_.state_;
  _impl_.state_ = nullptr;
  return temp;
}
inline ::runner::v1::TaskState* UpdateTaskResponse::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::runner::v1::TaskState>(GetArena());
    _impl_.state_ = reinterpret_cast<::runner::v1::TaskState*>(p);
  }
  return _impl_.state_;
}
inline ::runner::v1::TaskState* UpdateTaskResponse::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::runner::v1::TaskState* _msg = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:runner.v1.UpdateTaskResponse.state)
  return _msg;
}
inline void UpdateTaskResponse::set_allocated_state(::runner::v1::TaskState* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.state_ = reinterpret_cast<::runner::v1::TaskState*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.UpdateTaskResponse.state)
}

// repeated string sent_outputs = 2;
inline int UpdateTaskResponse::_internal_sent_outputs_size() const {
  return _internal_sent_outputs().size();
}
inline int UpdateTaskResponse::sent_outputs_size() const {
  return _internal_sent_outputs_size();
}
inline void UpdateTaskResponse::clear_sent_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sent_outputs_.Clear();
}
inline std::string* UpdateTaskResponse::add_sent_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_sent_outputs()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.UpdateTaskResponse.sent_outputs)
  return _s;
}
inline const std::string& UpdateTaskResponse::sent_outputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateTaskResponse.sent_outputs)
  return _internal_sent_outputs().Get(index);
}
inline std::string* UpdateTaskResponse::mutable_sent_outputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.UpdateTaskResponse.sent_outputs)
  return _internal_mutable_sent_outputs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void UpdateTaskResponse::set_sent_outputs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_sent_outputs()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.UpdateTaskResponse.sent_outputs)
}
template <typename Arg_, typename... Args_>
inline void UpdateTaskResponse::add_sent_outputs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_sent_outputs(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.UpdateTaskResponse.sent_outputs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateTaskResponse::sent_outputs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.UpdateTaskResponse.sent_outputs)
  return _internal_sent_outputs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UpdateTaskResponse::mutable_sent_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.UpdateTaskResponse.sent_outputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sent_outputs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UpdateTaskResponse::_internal_sent_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sent_outputs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UpdateTaskResponse::_internal_mutable_sent_outputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sent_outputs_;
}

// -------------------------------------------------------------------

// UpdateLogRequest

// int64 task_id = 1;
inline void UpdateLogRequest::clear_task_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = ::int64_t{0};
}
inline ::int64_t UpdateLogRequest::task_id() const {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateLogRequest.task_id)
  return _internal_task_id();
}
inline void UpdateLogRequest::set_task_id(::int64_t value) {
  _internal_set_task_id(value);
  // @@protoc_insertion_point(field_set:runner.v1.UpdateLogRequest.task_id)
}
inline ::int64_t UpdateLogRequest::_internal_task_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.task_id_;
}
inline void UpdateLogRequest::_internal_set_task_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.task_id_ = value;
}

// int64 index = 2;
inline void UpdateLogRequest::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = ::int64_t{0};
}
inline ::int64_t UpdateLogRequest::index() const {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateLogRequest.index)
  return _internal_index();
}
inline void UpdateLogRequest::set_index(::int64_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:runner.v1.UpdateLogRequest.index)
}
inline ::int64_t UpdateLogRequest::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void UpdateLogRequest::_internal_set_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// repeated .runner.v1.LogRow rows = 3;
inline int UpdateLogRequest::_internal_rows_size() const {
  return _internal_rows().size();
}
inline int UpdateLogRequest::rows_size() const {
  return _internal_rows_size();
}
inline void UpdateLogRequest::clear_rows() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rows_.Clear();
}
inline ::runner::v1::LogRow* UpdateLogRequest::mutable_rows(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.UpdateLogRequest.rows)
  return _internal_mutable_rows()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>* UpdateLogRequest::mutable_rows()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.UpdateLogRequest.rows)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rows();
}
inline const ::runner::v1::LogRow& UpdateLogRequest::rows(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateLogRequest.rows)
  return _internal_rows().Get(index);
}
inline ::runner::v1::LogRow* UpdateLogRequest::add_rows() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::runner::v1::LogRow* _add = _internal_mutable_rows()->Add();
  // @@protoc_insertion_point(field_add:runner.v1.UpdateLogRequest.rows)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>& UpdateLogRequest::rows() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.UpdateLogRequest.rows)
  return _internal_rows();
}
inline const ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>&
UpdateLogRequest::_internal_rows() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rows_;
}
inline ::google::protobuf::RepeatedPtrField<::runner::v1::LogRow>*
UpdateLogRequest::_internal_mutable_rows() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rows_;
}

// bool no_more = 4;
inline void UpdateLogRequest::clear_no_more() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_more_ = false;
}
inline bool UpdateLogRequest::no_more() const {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateLogRequest.no_more)
  return _internal_no_more();
}
inline void UpdateLogRequest::set_no_more(bool value) {
  _internal_set_no_more(value);
  // @@protoc_insertion_point(field_set:runner.v1.UpdateLogRequest.no_more)
}
inline bool UpdateLogRequest::_internal_no_more() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_more_;
}
inline void UpdateLogRequest::_internal_set_no_more(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_more_ = value;
}

// -------------------------------------------------------------------

// UpdateLogResponse

// int64 ack_index = 1;
inline void UpdateLogResponse::clear_ack_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_index_ = ::int64_t{0};
}
inline ::int64_t UpdateLogResponse::ack_index() const {
  // @@protoc_insertion_point(field_get:runner.v1.UpdateLogResponse.ack_index)
  return _internal_ack_index();
}
inline void UpdateLogResponse::set_ack_index(::int64_t value) {
  _internal_set_ack_index(value);
  // @@protoc_insertion_point(field_set:runner.v1.UpdateLogResponse.ack_index)
}
inline ::int64_t UpdateLogResponse::_internal_ack_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ack_index_;
}
inline void UpdateLogResponse::_internal_set_ack_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ack_index_ = value;
}

// -------------------------------------------------------------------

// Runner

// int64 id = 1;
inline void Runner::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Runner::id() const {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.id)
  return _internal_id();
}
inline void Runner::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:runner.v1.Runner.id)
}
inline ::int64_t Runner::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Runner::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string uuid = 2;
inline void Runner::clear_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.ClearToEmpty();
}
inline const std::string& Runner::uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.uuid)
  return _internal_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Runner::set_uuid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.Runner.uuid)
}
inline std::string* Runner::mutable_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.uuid)
  return _s;
}
inline const std::string& Runner::_internal_uuid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uuid_.Get();
}
inline void Runner::_internal_set_uuid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.Set(value, GetArena());
}
inline std::string* Runner::_internal_mutable_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uuid_.Mutable( GetArena());
}
inline std::string* Runner::release_uuid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Runner.uuid)
  return _impl_.uuid_.Release();
}
inline void Runner::set_allocated_uuid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uuid_.IsDefault()) {
    _impl_.uuid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Runner.uuid)
}

// string token = 3;
inline void Runner::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& Runner::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Runner::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.Runner.token)
}
inline std::string* Runner::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.token)
  return _s;
}
inline const std::string& Runner::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void Runner::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* Runner::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* Runner::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Runner.token)
  return _impl_.token_.Release();
}
inline void Runner::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Runner.token)
}

// string name = 4;
inline void Runner::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Runner::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Runner::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.Runner.name)
}
inline std::string* Runner::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.name)
  return _s;
}
inline const std::string& Runner::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Runner::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Runner::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Runner::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Runner.name)
  return _impl_.name_.Release();
}
inline void Runner::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Runner.name)
}

// .runner.v1.RunnerStatus status = 5;
inline void Runner::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::runner::v1::RunnerStatus Runner::status() const {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.status)
  return _internal_status();
}
inline void Runner::set_status(::runner::v1::RunnerStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:runner.v1.Runner.status)
}
inline ::runner::v1::RunnerStatus Runner::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::runner::v1::RunnerStatus>(_impl_.status_);
}
inline void Runner::_internal_set_status(::runner::v1::RunnerStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// repeated string agent_labels = 6 [deprecated = true];
inline int Runner::_internal_agent_labels_size() const {
  return _internal_agent_labels().size();
}
inline int Runner::agent_labels_size() const {
  return _internal_agent_labels_size();
}
inline void Runner::clear_agent_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.agent_labels_.Clear();
}
inline std::string* Runner::add_agent_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_agent_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.Runner.agent_labels)
  return _s;
}
inline const std::string& Runner::agent_labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.agent_labels)
  return _internal_agent_labels().Get(index);
}
inline std::string* Runner::mutable_agent_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.agent_labels)
  return _internal_mutable_agent_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Runner::set_agent_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_agent_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.Runner.agent_labels)
}
template <typename Arg_, typename... Args_>
inline void Runner::add_agent_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_agent_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.Runner.agent_labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Runner::agent_labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.Runner.agent_labels)
  return _internal_agent_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Runner::mutable_agent_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.Runner.agent_labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_agent_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Runner::_internal_agent_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.agent_labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Runner::_internal_mutable_agent_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.agent_labels_;
}

// repeated string custom_labels = 7 [deprecated = true];
inline int Runner::_internal_custom_labels_size() const {
  return _internal_custom_labels().size();
}
inline int Runner::custom_labels_size() const {
  return _internal_custom_labels_size();
}
inline void Runner::clear_custom_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_labels_.Clear();
}
inline std::string* Runner::add_custom_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_custom_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.Runner.custom_labels)
  return _s;
}
inline const std::string& Runner::custom_labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.custom_labels)
  return _internal_custom_labels().Get(index);
}
inline std::string* Runner::mutable_custom_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.custom_labels)
  return _internal_mutable_custom_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Runner::set_custom_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_custom_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.Runner.custom_labels)
}
template <typename Arg_, typename... Args_>
inline void Runner::add_custom_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_custom_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.Runner.custom_labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Runner::custom_labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.Runner.custom_labels)
  return _internal_custom_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Runner::mutable_custom_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.Runner.custom_labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_custom_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Runner::_internal_custom_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Runner::_internal_mutable_custom_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.custom_labels_;
}

// string version = 8;
inline void Runner::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& Runner::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Runner::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.Runner.version)
}
inline std::string* Runner::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.version)
  return _s;
}
inline const std::string& Runner::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void Runner::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* Runner::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* Runner::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Runner.version)
  return _impl_.version_.Release();
}
inline void Runner::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Runner.version)
}

// repeated string labels = 9;
inline int Runner::_internal_labels_size() const {
  return _internal_labels().size();
}
inline int Runner::labels_size() const {
  return _internal_labels_size();
}
inline void Runner::clear_labels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.labels_.Clear();
}
inline std::string* Runner::add_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_labels()->Add();
  // @@protoc_insertion_point(field_add_mutable:runner.v1.Runner.labels)
  return _s;
}
inline const std::string& Runner::labels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Runner.labels)
  return _internal_labels().Get(index);
}
inline std::string* Runner::mutable_labels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.Runner.labels)
  return _internal_mutable_labels()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Runner::set_labels(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_labels()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:runner.v1.Runner.labels)
}
template <typename Arg_, typename... Args_>
inline void Runner::add_labels(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_labels(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:runner.v1.Runner.labels)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Runner::labels() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.Runner.labels)
  return _internal_labels();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Runner::mutable_labels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.Runner.labels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_labels();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Runner::_internal_labels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.labels_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Runner::_internal_mutable_labels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.labels_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Task

// int64 id = 1;
inline void Task::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Task::id() const {
  // @@protoc_insertion_point(field_get:runner.v1.Task.id)
  return _internal_id();
}
inline void Task::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:runner.v1.Task.id)
}
inline ::int64_t Task::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Task::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional bytes workflow_payload = 2;
inline bool Task::has_workflow_payload() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Task::clear_workflow_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.workflow_payload_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Task::workflow_payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Task.workflow_payload)
  return _internal_workflow_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Task::set_workflow_payload(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.workflow_payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.Task.workflow_payload)
}
inline std::string* Task::mutable_workflow_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_workflow_payload();
  // @@protoc_insertion_point(field_mutable:runner.v1.Task.workflow_payload)
  return _s;
}
inline const std::string& Task::_internal_workflow_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.workflow_payload_.Get();
}
inline void Task::_internal_set_workflow_payload(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.workflow_payload_.Set(value, GetArena());
}
inline std::string* Task::_internal_mutable_workflow_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.workflow_payload_.Mutable( GetArena());
}
inline std::string* Task::release_workflow_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Task.workflow_payload)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.workflow_payload_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.workflow_payload_.Set("", GetArena());
  }
  return released;
}
inline void Task::set_allocated_workflow_payload(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.workflow_payload_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.workflow_payload_.IsDefault()) {
    _impl_.workflow_payload_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Task.workflow_payload)
}

// optional .google.protobuf.Struct context = 3;
inline bool Task::has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_ != nullptr);
  return value;
}
inline const ::google::protobuf::Struct& Task::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Struct* p = _impl_.context_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Struct&>(::google::protobuf::_Struct_default_instance_);
}
inline const ::google::protobuf::Struct& Task::context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Task.context)
  return _internal_context();
}
inline void Task::unsafe_arena_set_allocated_context(::google::protobuf::Struct* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }
  _impl_.context_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.Task.context)
}
inline ::google::protobuf::Struct* Task::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* released = _impl_.context_;
  _impl_.context_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Struct* Task::unsafe_arena_release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Task.context)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Struct* temp = _impl_.context_;
  _impl_.context_ = nullptr;
  return temp;
}
inline ::google::protobuf::Struct* Task::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.context_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Struct>(GetArena());
    _impl_.context_ = reinterpret_cast<::google::protobuf::Struct*>(p);
  }
  return _impl_.context_;
}
inline ::google::protobuf::Struct* Task::mutable_context() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Struct* _msg = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:runner.v1.Task.context)
  return _msg;
}
inline void Task::set_allocated_context(::google::protobuf::Struct* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.context_ = reinterpret_cast<::google::protobuf::Struct*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Task.context)
}

// map<string, string> secrets = 4;
inline int Task::_internal_secrets_size() const {
  return _internal_secrets().size();
}
inline int Task::secrets_size() const {
  return _internal_secrets_size();
}
inline void Task::clear_secrets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.secrets_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Task::_internal_secrets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.secrets_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Task::secrets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:runner.v1.Task.secrets)
  return _internal_secrets();
}
inline ::google::protobuf::Map<std::string, std::string>* Task::_internal_mutable_secrets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.secrets_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Task::mutable_secrets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:runner.v1.Task.secrets)
  return _internal_mutable_secrets();
}

// string machine = 5 [deprecated = true];
inline void Task::clear_machine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.machine_.ClearToEmpty();
}
inline const std::string& Task::machine() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.Task.machine)
  return _internal_machine();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Task::set_machine(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.machine_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.Task.machine)
}
inline std::string* Task::mutable_machine() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_machine();
  // @@protoc_insertion_point(field_mutable:runner.v1.Task.machine)
  return _s;
}
inline const std::string& Task::_internal_machine() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.machine_.Get();
}
inline void Task::_internal_set_machine(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.machine_.Set(value, GetArena());
}
inline std::string* Task::_internal_mutable_machine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.machine_.Mutable( GetArena());
}
inline std::string* Task::release_machine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.Task.machine)
  return _impl_.machine_.Release();
}
inline void Task::set_allocated_machine(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.machine_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.machine_.IsDefault()) {
    _impl_.machine_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.Task.machine)
}

// map<string, .runner.v1.TaskNeed> needs = 6;
inline int Task::_internal_needs_size() const {
  return _internal_needs().size();
}
inline int Task::needs_size() const {
  return _internal_needs_size();
}
inline void Task::clear_needs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.needs_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>& Task::_internal_needs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.needs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>& Task::needs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:runner.v1.Task.needs)
  return _internal_needs();
}
inline ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>* Task::_internal_mutable_needs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.needs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::runner::v1::TaskNeed>* Task::mutable_needs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:runner.v1.Task.needs)
  return _internal_mutable_needs();
}

// map<string, string> vars = 7;
inline int Task::_internal_vars_size() const {
  return _internal_vars().size();
}
inline int Task::vars_size() const {
  return _internal_vars_size();
}
inline void Task::clear_vars() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vars_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Task::_internal_vars() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vars_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Task::vars() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:runner.v1.Task.vars)
  return _internal_vars();
}
inline ::google::protobuf::Map<std::string, std::string>* Task::_internal_mutable_vars() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.vars_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Task::mutable_vars() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:runner.v1.Task.vars)
  return _internal_mutable_vars();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TaskNeed

// map<string, string> outputs = 1;
inline int TaskNeed::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int TaskNeed::outputs_size() const {
  return _internal_outputs_size();
}
inline void TaskNeed::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TaskNeed::_internal_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outputs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TaskNeed::outputs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:runner.v1.TaskNeed.outputs)
  return _internal_outputs();
}
inline ::google::protobuf::Map<std::string, std::string>* TaskNeed::_internal_mutable_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.outputs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TaskNeed::mutable_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:runner.v1.TaskNeed.outputs)
  return _internal_mutable_outputs();
}

// .runner.v1.Result result = 2;
inline void TaskNeed::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::runner::v1::Result TaskNeed::result() const {
  // @@protoc_insertion_point(field_get:runner.v1.TaskNeed.result)
  return _internal_result();
}
inline void TaskNeed::set_result(::runner::v1::Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:runner.v1.TaskNeed.result)
}
inline ::runner::v1::Result TaskNeed::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::runner::v1::Result>(_impl_.result_);
}
inline void TaskNeed::_internal_set_result(::runner::v1::Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// TaskState

// int64 id = 1;
inline void TaskState::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t TaskState::id() const {
  // @@protoc_insertion_point(field_get:runner.v1.TaskState.id)
  return _internal_id();
}
inline void TaskState::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:runner.v1.TaskState.id)
}
inline ::int64_t TaskState::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void TaskState::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .runner.v1.Result result = 2;
inline void TaskState::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::runner::v1::Result TaskState::result() const {
  // @@protoc_insertion_point(field_get:runner.v1.TaskState.result)
  return _internal_result();
}
inline void TaskState::set_result(::runner::v1::Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:runner.v1.TaskState.result)
}
inline ::runner::v1::Result TaskState::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::runner::v1::Result>(_impl_.result_);
}
inline void TaskState::_internal_set_result(::runner::v1::Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .google.protobuf.Timestamp started_at = 3;
inline bool TaskState::has_started_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.started_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TaskState::_internal_started_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.started_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TaskState::started_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.TaskState.started_at)
  return _internal_started_at();
}
inline void TaskState::unsafe_arena_set_allocated_started_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_at_);
  }
  _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.TaskState.started_at)
}
inline ::google::protobuf::Timestamp* TaskState::release_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.started_at_;
  _impl_.started_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* TaskState::unsafe_arena_release_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.TaskState.started_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.started_at_;
  _impl_.started_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TaskState::_internal_mutable_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.started_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.started_at_;
}
inline ::google::protobuf::Timestamp* TaskState::mutable_started_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_started_at();
  // @@protoc_insertion_point(field_mutable:runner.v1.TaskState.started_at)
  return _msg;
}
inline void TaskState::set_allocated_started_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.TaskState.started_at)
}

// .google.protobuf.Timestamp stopped_at = 4;
inline bool TaskState::has_stopped_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stopped_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TaskState::_internal_stopped_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.stopped_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TaskState::stopped_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.TaskState.stopped_at)
  return _internal_stopped_at();
}
inline void TaskState::unsafe_arena_set_allocated_stopped_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stopped_at_);
  }
  _impl_.stopped_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.TaskState.stopped_at)
}
inline ::google::protobuf::Timestamp* TaskState::release_stopped_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.stopped_at_;
  _impl_.stopped_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* TaskState::unsafe_arena_release_stopped_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.TaskState.stopped_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.stopped_at_;
  _impl_.stopped_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TaskState::_internal_mutable_stopped_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stopped_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.stopped_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.stopped_at_;
}
inline ::google::protobuf::Timestamp* TaskState::mutable_stopped_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_stopped_at();
  // @@protoc_insertion_point(field_mutable:runner.v1.TaskState.stopped_at)
  return _msg;
}
inline void TaskState::set_allocated_stopped_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stopped_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.stopped_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.TaskState.stopped_at)
}

// repeated .runner.v1.StepState steps = 5;
inline int TaskState::_internal_steps_size() const {
  return _internal_steps().size();
}
inline int TaskState::steps_size() const {
  return _internal_steps_size();
}
inline void TaskState::clear_steps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steps_.Clear();
}
inline ::runner::v1::StepState* TaskState::mutable_steps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:runner.v1.TaskState.steps)
  return _internal_mutable_steps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>* TaskState::mutable_steps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:runner.v1.TaskState.steps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_steps();
}
inline const ::runner::v1::StepState& TaskState::steps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.TaskState.steps)
  return _internal_steps().Get(index);
}
inline ::runner::v1::StepState* TaskState::add_steps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::runner::v1::StepState* _add = _internal_mutable_steps()->Add();
  // @@protoc_insertion_point(field_add:runner.v1.TaskState.steps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>& TaskState::steps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:runner.v1.TaskState.steps)
  return _internal_steps();
}
inline const ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>&
TaskState::_internal_steps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steps_;
}
inline ::google::protobuf::RepeatedPtrField<::runner::v1::StepState>*
TaskState::_internal_mutable_steps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.steps_;
}

// -------------------------------------------------------------------

// StepState

// int64 id = 1;
inline void StepState::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t StepState::id() const {
  // @@protoc_insertion_point(field_get:runner.v1.StepState.id)
  return _internal_id();
}
inline void StepState::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:runner.v1.StepState.id)
}
inline ::int64_t StepState::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void StepState::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// .runner.v1.Result result = 2;
inline void StepState::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = 0;
}
inline ::runner::v1::Result StepState::result() const {
  // @@protoc_insertion_point(field_get:runner.v1.StepState.result)
  return _internal_result();
}
inline void StepState::set_result(::runner::v1::Result value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:runner.v1.StepState.result)
}
inline ::runner::v1::Result StepState::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::runner::v1::Result>(_impl_.result_);
}
inline void StepState::_internal_set_result(::runner::v1::Result value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// .google.protobuf.Timestamp started_at = 3;
inline bool StepState::has_started_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.started_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& StepState::_internal_started_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.started_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& StepState::started_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.StepState.started_at)
  return _internal_started_at();
}
inline void StepState::unsafe_arena_set_allocated_started_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_at_);
  }
  _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.StepState.started_at)
}
inline ::google::protobuf::Timestamp* StepState::release_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.started_at_;
  _impl_.started_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* StepState::unsafe_arena_release_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.StepState.started_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.started_at_;
  _impl_.started_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StepState::_internal_mutable_started_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.started_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.started_at_;
}
inline ::google::protobuf::Timestamp* StepState::mutable_started_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_started_at();
  // @@protoc_insertion_point(field_mutable:runner.v1.StepState.started_at)
  return _msg;
}
inline void StepState::set_allocated_started_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.started_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.started_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.StepState.started_at)
}

// .google.protobuf.Timestamp stopped_at = 4;
inline bool StepState::has_stopped_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.stopped_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& StepState::_internal_stopped_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.stopped_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& StepState::stopped_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.StepState.stopped_at)
  return _internal_stopped_at();
}
inline void StepState::unsafe_arena_set_allocated_stopped_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stopped_at_);
  }
  _impl_.stopped_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.StepState.stopped_at)
}
inline ::google::protobuf::Timestamp* StepState::release_stopped_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.stopped_at_;
  _impl_.stopped_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* StepState::unsafe_arena_release_stopped_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.StepState.stopped_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.stopped_at_;
  _impl_.stopped_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StepState::_internal_mutable_stopped_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stopped_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.stopped_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.stopped_at_;
}
inline ::google::protobuf::Timestamp* StepState::mutable_stopped_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_stopped_at();
  // @@protoc_insertion_point(field_mutable:runner.v1.StepState.stopped_at)
  return _msg;
}
inline void StepState::set_allocated_stopped_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.stopped_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.stopped_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.StepState.stopped_at)
}

// int64 log_index = 5;
inline void StepState::clear_log_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_index_ = ::int64_t{0};
}
inline ::int64_t StepState::log_index() const {
  // @@protoc_insertion_point(field_get:runner.v1.StepState.log_index)
  return _internal_log_index();
}
inline void StepState::set_log_index(::int64_t value) {
  _internal_set_log_index(value);
  // @@protoc_insertion_point(field_set:runner.v1.StepState.log_index)
}
inline ::int64_t StepState::_internal_log_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_index_;
}
inline void StepState::_internal_set_log_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_index_ = value;
}

// int64 log_length = 6;
inline void StepState::clear_log_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_length_ = ::int64_t{0};
}
inline ::int64_t StepState::log_length() const {
  // @@protoc_insertion_point(field_get:runner.v1.StepState.log_length)
  return _internal_log_length();
}
inline void StepState::set_log_length(::int64_t value) {
  _internal_set_log_length(value);
  // @@protoc_insertion_point(field_set:runner.v1.StepState.log_length)
}
inline ::int64_t StepState::_internal_log_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_length_;
}
inline void StepState::_internal_set_log_length(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_length_ = value;
}

// -------------------------------------------------------------------

// LogRow

// .google.protobuf.Timestamp time = 1;
inline bool LogRow::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LogRow::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LogRow::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.LogRow.time)
  return _internal_time();
}
inline void LogRow::unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:runner.v1.LogRow.time)
}
inline ::google::protobuf::Timestamp* LogRow::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* LogRow::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.LogRow.time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LogRow::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* LogRow::mutable_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:runner.v1.LogRow.time)
  return _msg;
}
inline void LogRow::set_allocated_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:runner.v1.LogRow.time)
}

// string content = 2;
inline void LogRow::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& LogRow::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:runner.v1.LogRow.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LogRow::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:runner.v1.LogRow.content)
}
inline std::string* LogRow::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:runner.v1.LogRow.content)
  return _s;
}
inline const std::string& LogRow::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void LogRow::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* LogRow::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* LogRow::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:runner.v1.LogRow.content)
  return _impl_.content_.Release();
}
inline void LogRow::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:runner.v1.LogRow.content)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace runner


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::runner::v1::RunnerStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::runner::v1::RunnerStatus>() {
  return ::runner::v1::RunnerStatus_descriptor();
}
template <>
struct is_proto_enum<::runner::v1::Result> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::runner::v1::Result>() {
  return ::runner::v1::Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // runner_2fv1_2fmessages_2eproto_2epb_2eh
